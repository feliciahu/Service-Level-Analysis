select *  from table(SBX_PSAS_DB.INFORMATION_SCHEMA.task_history(
    scheduled_time_range_start=>dateadd('hour',-24,current_timestamp()),
    result_limit => 10,
    task_name=>'TSK_KEVIN_B_SERVICE_LEVEL_ANALYTICS_ONBOARDING_DASHBOARD_DETAIL'));

SHOW TASKS LIKE 'TSK_KEVIN_B_SERVICE_LEVEL_ANALYTICS_ONBOARDING_DASHBOARD_DETAIL%';
DESC TASK TSK_KEVIN_B_SERVICE_LEVEL_ANALYTICS_ONBOARDING_DASHBOARD_CUST;
execute task TSK_KEVIN_B_SERVICE_LEVEL_ANALYTICS_ONBOARDING_DASHBOARD_DETAIL;
alter task TSK_KEVIN_B_SERVICE_LEVEL_ANALYTICS_ONBOARDING_DASHBOARD_DETAIL resume;
SHOW PARAMETERS LIKE 'TIMESTAMP_INPUT_FORMAT'

select DISTINCT START_DT  from SBX_PSAS_DB.SALES_OPS_GOV.T_SERVICE_LEVEL_ONBOARDING_DASHBOARD_ITEM where TOTAL_BUILD_DOLLAR_VALUE
is not null
select *  from   SBX_PSAS_DB.SALES_OPS_GOV.SERVICE_LEVEL_INPUT_CPH

create or replace task SBX_PSAS_DB.SALES_OPS_GOV.TSK_KEVIN_B_SERVICE_LEVEL_ANALYTICS_ONBOARDING_DASHBOARD_CUST
	warehouse=SBX_EA_GENERAL_FR_WH
	schedule='USING CRON 51 7 * * 1-5 America/Chicago'
	TIMESTAMP_INPUT_FORMAT='AUTO'
	as CREATE OR REPLACE TABLE SBX_PSAS_DB.SALES_OPS_GOV.T_SERVICE_LEVEL_ONBOARDING_DASHBOARD_CUSTOMER AS


--COMBINE CUSTOMER DATA FOR CPH & MHS
WITH 
CREATE OR REPLACE TABLE ONBOARD AS (


SELECT * FROM SBX_PSAS_DB.SALES_OPS_GOV.SERVICE_LEVEL_INPUT_CPH
WHERE CUST_ACCT_ID <> '401366'
)

--FIND FIRST ORDER DATE OF AN ACCOUNT
, 
CREATE OR REPLACE TABLE START_DATE AS (

SELECT  CUST.CUST_ACCT_ID,
        MIN(CAL_CYMD) AS START_DT
FROM    PRD_PSAS_DB.RPT.T_SLA_CUST_ORD_DTL ORD
JOIN    PRD_PSAS_DB.RPT.T_SLA_CUST_ACCT CUST
ON      ORD.CUST_ACCT_SURR_KEY = CUST.CUST_ACCT_SURR_KEY
JOIN    ONBOARD
ON      LTRIM(CUST.CUST_ACCT_ID,'0') = LTRIM(ONBOARD.CUST_ACCT_ID,'0')
WHERE   ORD.ORDR_QTY > 0
AND     CAL_CYMD >= '2022-09-01'
AND     CAL_CYMD BETWEEN DATEADD(DAY, -60, ONBOARD.START_DATE_NOTED) AND DATEADD(DAY, 120, ONBOARD.START_DATE_NOTED)

GROUP BY  CUST.CUST_ACCT_ID)


, 
CREATE OR REPLACE TABLE CPH AS (
SELECT  'CPH' AS SEGMENT, 
SERVICE_LEVEL_INPUT_CPH.DATE,
SERVICE_LEVEL_INPUT_CPH.BUSINESS_SEGMENT,
SERVICE_LEVEL_INPUT_CPH.CHAIN_GPO,
SERVICE_LEVEL_INPUT_CPH.REP_NAME,
SERVICE_LEVEL_INPUT_CPH.PREVIOUS_WHOLESALER,
SERVICE_LEVEL_INPUT_CPH.CUSTOMER_NAME,
SERVICE_LEVEL_INPUT_CPH.OS,
SERVICE_LEVEL_INPUT_CPH.START_DATE_NOTED,
SERVICE_LEVEL_INPUT_CPH.START_DATE_ACTUAL,
SERVICE_LEVEL_INPUT_CPH.CUST_ACCT_ID,
SERVICE_LEVEL_INPUT_CPH.ESTIMATED_ANNUAL_VOLUME,
SERVICE_LEVEL_INPUT_CPH.ESTIMATED_WEEKLY_VOLUME,
SERVICE_LEVEL_INPUT_CPH.BUILD,
SERVICE_LEVEL_INPUT_CPH.NO_BUILD_REASON,
SERVICE_LEVEL_INPUT_CPH.HOME_DC_ID,
SERVICE_LEVEL_INPUT_CPH.SL_FREQUENCY,
SERVICE_LEVEL_INPUT_CPH.PROVIDED_USAGE_TIME_FRAME,
SERVICE_LEVEL_INPUT_CPH.ACCOUNT_MANAGER_NAME,
SERVICE_LEVEL_INPUT_CPH.POINT_PERSON_NAME,
SERVICE_LEVEL_INPUT_CPH.HOLDOUT_REF_ID,
SERVICE_LEVEL_INPUT_CPH.STATUS,
SERVICE_LEVEL_INPUT_CPH.NEXT_CHANGE_DATE,
SERVICE_LEVEL_INPUT_CPH.NOTES,
SERVICE_LEVEL_INPUT_CPH.DATE_TRANSITIONED_TO_ANALYST,
SERVICE_LEVEL_INPUT_CPH.ANALYST_NAME,
SERVICE_LEVEL_INPUT_CPH.RAW_SL_AVG,
SERVICE_LEVEL_INPUT_CPH.ADJ_SL_AVG,
SERVICE_LEVEL_INPUT_CPH.ACTUAL_WEEKLY_VOLUME,
SERVICE_LEVEL_INPUT_CPH.ANNUALIZED_VOLUME,
SERVICE_LEVEL_INPUT_CPH.ANNUAL_EST,
SERVICE_LEVEL_INPUT_CPH.VARIANCE,
SERVICE_LEVEL_INPUT_CPH.EXPECTED_VOLUME_PERCENT,
SERVICE_LEVEL_INPUT_CPH.VOL_CATEGORY,
SERVICE_LEVEL_INPUT_CPH.START_DATE_CATEGORY,
SERVICE_LEVEL_INPUT_CPH.DATE_GAP,
SERVICE_LEVEL_INPUT_CPH.POST_TRANS_REVIEW,
        START_DATE.START_DT AS FIRST_ORDER_DATE,
        CASE WHEN START_DATE.START_DT IS NULL THEN START_DATE_NOTED ELSE START_DATE.START_DT END START_DT,
        CASE WHEN START_DATE.START_DT IS NULL THEN 'PENDING' ELSE 'ACTIVE' END START_DT_STATUS,
NULL AS SERVICE_LEVEL_CODING_CHAIN_ID,
NULL AS SERVICE_LEVEL_CODING_NATIONAL_GROUP_ID,
NULL AS SERVICE_LEVEL_CODING_NATIONAL_SUB_GROUP_ID,
NULL AS SERVICE_LEVEL_CODING_REGION_ID,
NULL AS SERVICE_LEVEL_CODING_ACCOUNT_ID,
TOTAL_BUILD_DOLLAR_VALUE,
PERCENT_OF_ANNUAL_EST,
BUILD_STRATEGY_INVENTORY_BUILD_DAYS,
ITEMS_WITH_MONTHLY_FORECAST_EXCLUDED,
GO_LIVE_REF,
OH_MCNS_COVERAGE_TARGET90,
OH_OO_MUS_COVERAGE_TARGET96
FROM    SBX_PSAS_DB.SALES_OPS_GOV.SERVICE_LEVEL_INPUT_CPH
LEFT JOIN START_DATE
ON      LTRIM(SERVICE_LEVEL_INPUT_CPH.CUST_ACCT_ID,'0') = LTRIM(START_DATE.CUST_ACCT_ID,'0'))


------------------------
,
CREATE OR REPLACE TABLE SERVICE_LEVEL_INPUT_MHS_SA AS (

SELECT * FROM SBX_PSAS_DB.SALES_OPS_GOV.SERVICE_LEVEL_INPUT_MHS WHERE CUSTOMER_NAME NOT LIKE 'OPTUM - %'
UNION ALL
SELECT * FROM SBX_PSAS_DB.SALES_OPS_GOV.SERVICE_LEVEL_INPUT_SA)

--COMBINE CUSTOMER DATA FOR CPH & MHS

--MHS CODING LOGIC
, 
CREATE OR REPLACE TABLE ACCT AS (
SELECT  CUSTOMER_NAME, VALUE AS CUST_ACCT_ID,
FROM    SERVICE_LEVEL_INPUT_MHS_SA, LATERAL SPLIT_TO_TABLE(SERVICE_LEVEL_CODING_ACCOUNT_ID, ';')
WHERE   SERVICE_LEVEL_CODING_ACCOUNT_ID IS NOT NULL)

,  
CREATE OR REPLACE TABLE REGION_ID AS (
SELECT  CUSTOMER_NAME, VALUE AS REGION_ID 
FROM    SERVICE_LEVEL_INPUT_MHS_SA, LATERAL SPLIT_TO_TABLE(SERVICE_LEVEL_CODING_REGION_ID, ';')
WHERE   SERVICE_LEVEL_CODING_REGION_ID IS NOT NULL
AND SERVICE_LEVEL_CODING_ACCOUNT_ID IS NULL)

, 
CREATE OR REPLACE TABLE NATL_SUB_GROUP_ID AS (
SELECT  CUSTOMER_NAME, VALUE AS NATL_SUB_GROUP_ID
FROM    SERVICE_LEVEL_INPUT_MHS_SA, LATERAL SPLIT_TO_TABLE(SERVICE_LEVEL_CODING_NATIONAL_SUB_GROUP_ID, ';')
WHERE   SERVICE_LEVEL_CODING_NATIONAL_SUB_GROUP_ID IS NOT NULL
AND SERVICE_LEVEL_CODING_ACCOUNT_ID IS NULL)

,  
CREATE OR REPLACE TABLE NATL_GROUP_ID AS (
SELECT  CUSTOMER_NAME, VALUE AS NATL_GROUP_ID
FROM    SERVICE_LEVEL_INPUT_MHS_SA, LATERAL SPLIT_TO_TABLE(SERVICE_LEVEL_CODING_NATIONAL_GROUP_ID, ';')
WHERE   SERVICE_LEVEL_CODING_NATIONAL_GROUP_ID IS NOT NULL
AND SERVICE_LEVEL_CODING_ACCOUNT_ID IS NULL)

,  
CREATE OR REPLACE TABLE CHAIN_ID AS (
SELECT  CUSTOMER_NAME, VALUE AS CHAIN_ID
FROM    SERVICE_LEVEL_INPUT_MHS_SA, LATERAL SPLIT_TO_TABLE(SERVICE_LEVEL_CODING_CHAIN_ID, ';')
WHERE   SERVICE_LEVEL_CODING_CHAIN_ID IS NOT NULL
AND SERVICE_LEVEL_CODING_ACCOUNT_ID IS NULL)

,  
CREATE OR REPLACE TABLE MAPPING AS (

SELECT 
A.CUSTOMER_NAME,
A.CHAIN_ID,
B.NATL_GROUP_ID,
C.NATL_SUB_GROUP_ID,
D.REGION_ID
FROM CHAIN_ID A
LEFT JOIN NATL_GROUP_ID B
ON A.CUSTOMER_NAME=B.CUSTOMER_NAME
LEFT JOIN NATL_SUB_GROUP_ID C
ON A.CUSTOMER_NAME=C.CUSTOMER_NAME
LEFT JOIN REGION_ID D
ON A.CUSTOMER_NAME=D.CUSTOMER_NAME)

,  
CREATE OR REPLACE TABLE ACCT_NO_REGION AS ( 
SELECT MAPPING.*,
ACCT.CUST_ACCT_ID
FROM MAPPING MAPPING
LEFT JOIN PRD_PSAS_DB.EDWRPT.DIM_CUST_ACCT_CURR ACCT
ON LTRIM(MAPPING.CHAIN_ID,'0')=LTRIM(ACCT.ACCT_CHN_ID,'0')
AND LTRIM(MAPPING.NATL_GROUP_ID,'0')=LTRIM(ACCT.NATL_GRP_CD,'0')
AND LTRIM(MAPPING.NATL_SUB_GROUP_ID,'0')=LTRIM(ACCT.NATL_SUB_GRP_CD,'0')
WHERE MAPPING.REGION_ID IS NULL)

,  
CREATE OR REPLACE TABLE ACCT_YES_REGION AS ( 
SELECT MAPPING.*,
ACCT.CUST_ACCT_ID
FROM MAPPING MAPPING
LEFT JOIN PRD_PSAS_DB.EDWRPT.DIM_CUST_ACCT_CURR ACCT
ON LTRIM(MAPPING.CHAIN_ID,'0')=LTRIM(ACCT.ACCT_CHN_ID,'0')
AND LTRIM(MAPPING.NATL_GROUP_ID,'0')=LTRIM(ACCT.NATL_GRP_CD,'0')
AND LTRIM(MAPPING.NATL_SUB_GROUP_ID,'0')=LTRIM(ACCT.NATL_SUB_GRP_CD,'0')
AND LTRIM(MAPPING.REGION_ID,'0')=LTRIM(ACCT.CUST_RGN_NUM,'0')
WHERE REGION_ID IS NOT NULL)

, 
CREATE OR REPLACE TABLE ONBOARD_MHS AS (
SELECT DISTINCT CUSTOMER_NAME,CUST_ACCT_ID
FROM ACCT
WHERE CUST_ACCT_ID <> ''
GROUP BY 1,2
UNION 
SELECT DISTINCT CUSTOMER_NAME,CUST_ACCT_ID 
FROM ACCT_NO_REGION
WHERE CUST_ACCT_ID <> ''
GROUP BY 1,2
UNION 
SELECT DISTINCT CUSTOMER_NAME,CUST_ACCT_ID 
FROM ACCT_YES_REGION
WHERE CUST_ACCT_ID <> ''
GROUP BY 1,2)

--FIND FIRST ORDER DATE OF AN ACCOUNT
, 
CREATE OR REPLACE TABLE START_DATE_MHS_PREP AS (

SELECT  ONBOARD_MHS.CUSTOMER_NAME,
        MIN(CAL_CYMD) AS START_DT
FROM    PRD_PSAS_DB.RPT.T_SLA_CUST_ORD_DTL ORD
JOIN    PRD_PSAS_DB.RPT.T_SLA_CUST_ACCT CUST
ON      ORD.CUST_ACCT_SURR_KEY = CUST.CUST_ACCT_SURR_KEY
JOIN    ONBOARD_MHS
ON      LTRIM(CUST.CUST_ACCT_ID,'0') = LTRIM(ONBOARD_MHS.CUST_ACCT_ID,'0')
WHERE   ORD.ORDR_QTY > 0
AND     CAL_CYMD >= '2022-09-01'
GROUP BY  ONBOARD_MHS.CUSTOMER_NAME)

--SELECT * FROM SBX_PSAS_DB.SALES_OPS_GOV.SERVICE_LEVEL_INPUT_MHS

, 
CREATE OR REPLACE TABLE START_DATE_MHS AS (

SELECT  START_DATE_MHS_PREP.CUSTOMER_NAME,
        CASE WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'UNIVERSITY OF UTAH' THEN '2023-11-01'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'WEST VIRGINIA UNIVERSITY' THEN '2023-11-01'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'HARTFORD HEALTHCARE' THEN '2023-11-01'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'ORTHO MIDWEST SURGERY CENTER, 165957' THEN '2023-07-01'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'BERKSHIRE HEALTH SYSTEM (NARH)' THEN '2024-02-23'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'UPMC HOSPITALS' THEN '2023-08-16'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'OZARK' THEN '2022-01-03'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'MERCY' THEN '2024-01-03'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'OPTUM SP' THEN '2024-07-01'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'OPTUM HDP' THEN '2024-07-01'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'OPTUM FRONTIER' THEN '2024-07-01'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'OPTUM GENOA' THEN '2024-07-01'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'METRO' THEN '2024-04-15'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'COLUMBIA VALLEY COMMUNITY HEALTH' THEN '2024-04-01'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'ANDERSON HEALTH CARE' THEN '2024-08-05'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'HCA HEATHCARE' THEN '2023-03-01'
             ELSE START_DATE_MHS_PREP.START_DT END AS START_DT
FROM    START_DATE_MHS_PREP
GROUP BY START_DATE_MHS_PREP.CUSTOMER_NAME, 
        CASE WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'UNIVERSITY OF UTAH' THEN '2023-11-01'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'WEST VIRGINIA UNIVERSITY' THEN '2023-11-01'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'HARTFORD HEALTHCARE' THEN '2023-11-01'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'ORTHO MIDWEST SURGERY CENTER, 165957' THEN '2023-07-01'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'BERKSHIRE HEALTH SYSTEM (NARH)' THEN '2024-02-23'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'UPMC HOSPITALS' THEN '2023-08-16'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'OZARK' THEN '2022-01-03'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'MERCY' THEN '2024-01-03'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'OPTUM SP' THEN '2024-07-01'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'OPTUM HDP' THEN '2024-07-01'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'OPTUM FRONTIER' THEN '2024-07-01'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'OPTUM GENOA' THEN '2024-07-01'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'METRO' THEN '2024-04-15'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'COLUMBIA VALLEY COMMUNITY HEALTH' THEN '2024-04-01'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'ANDERSON HEALTH CARE' THEN '2024-08-05'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'HCA HEATHCARE' THEN '2023-03-01'
             ELSE START_DATE_MHS_PREP.START_DT END)


SELECT * FROM CPH 

UNION ALL 

SELECT  'MHS' AS SEGMENT,
 --CASE WHEN BUSINESS_SEGMENT = 'MHS' THEN 'MHS'
--         WHEN BUSINESS_SEGMENT = 'ISMC' THEN 'CPH'
--         WHEN BUSINESS_SEGMENT = 'RETAIL' THEN 'CPH'
--         WHEN BUSINESS_SEGMENT = 'CPH' THEN 'CPH'
--         ELSE 'MHS' END AS SEGMENT, 
SERVICE_LEVEL_INPUT_MHS.DATE,
SERVICE_LEVEL_INPUT_MHS.BUSINESS_SEGMENT,
SERVICE_LEVEL_INPUT_MHS.CHAIN_GPO,
SERVICE_LEVEL_INPUT_MHS.REP_NAME,
SERVICE_LEVEL_INPUT_MHS.PREVIOUS_WHOLESALER,
SERVICE_LEVEL_INPUT_MHS.CUSTOMER_NAME,
SERVICE_LEVEL_INPUT_MHS.OS,
SERVICE_LEVEL_INPUT_MHS.START_DATE_NOTED,
SERVICE_LEVEL_INPUT_MHS.START_DATE_ACTUAL,
SERVICE_LEVEL_INPUT_MHS.CUST_ACCT_ID,
SERVICE_LEVEL_INPUT_MHS.ESTIMATED_ANNUAL_VOLUME,
SERVICE_LEVEL_INPUT_MHS.ESTIMATED_WEEKLY_VOLUME,
SERVICE_LEVEL_INPUT_MHS.BUILD,
SERVICE_LEVEL_INPUT_MHS.NO_BUILD_REASON,
SERVICE_LEVEL_INPUT_MHS.HOME_DC_ID,
SERVICE_LEVEL_INPUT_MHS.SL_FREQUENCY,
SERVICE_LEVEL_INPUT_MHS.PROVIDED_USAGE_TIME_FRAME,
SERVICE_LEVEL_INPUT_MHS.ACCOUNT_MANAGER_NAME,
SERVICE_LEVEL_INPUT_MHS.POINT_PERSON_NAME,
SERVICE_LEVEL_INPUT_MHS.HOLDOUT_REF_ID,
SERVICE_LEVEL_INPUT_MHS.STATUS,
SERVICE_LEVEL_INPUT_MHS.NEXT_CHANGE_DATE,
SERVICE_LEVEL_INPUT_MHS.NOTES,
SERVICE_LEVEL_INPUT_MHS.DATE_TRANSITIONED_TO_ANALYST,
SERVICE_LEVEL_INPUT_MHS.ANALYST_NAME,
SERVICE_LEVEL_INPUT_MHS.RAW_SL_AVG,
SERVICE_LEVEL_INPUT_MHS.ADJ_SL_AVG,
SERVICE_LEVEL_INPUT_MHS.ACTUAL_WEEKLY_VOLUME,
SERVICE_LEVEL_INPUT_MHS.ANNUALIZED_VOLUME,
SERVICE_LEVEL_INPUT_MHS.ANNUAL_EST,
SERVICE_LEVEL_INPUT_MHS.VARIANCE,
SERVICE_LEVEL_INPUT_MHS.EXPECTED_VOLUME_PERCENT,
SERVICE_LEVEL_INPUT_MHS.VOL_CATEGORY,
SERVICE_LEVEL_INPUT_MHS.START_DATE_CATEGORY,
SERVICE_LEVEL_INPUT_MHS.DATE_GAP,
SERVICE_LEVEL_INPUT_MHS.POST_TRANS_REVIEW,
START_DATE_MHS.START_DT AS FIRST_ORDER_DATE,
CASE WHEN START_DATE_MHS.START_DT IS NULL THEN START_DATE_NOTED ELSE START_DATE_MHS.START_DT END START_DT,
CASE WHEN START_DATE_MHS.START_DT IS NULL THEN 'PENDING' ELSE 'ACTIVE' END START_DT_STATUS,
NULL AS SERVICE_LEVEL_CODING_CHAIN_ID,
NULL AS SERVICE_LEVEL_CODING_NATIONAL_GROUP_ID,
NULL AS SERVICE_LEVEL_CODING_NATIONAL_SUB_GROUP_ID,
NULL AS SERVICE_LEVEL_CODING_REGION_ID,
NULL AS SERVICE_LEVEL_CODING_ACCOUNT_ID,
SERVICE_LEVEL_INPUT_MHS.TOTAL_BUILD_DOLLAR_VALUE,
SERVICE_LEVEL_INPUT_MHS.PERCENT_OF_ANNUAL_EST,
SERVICE_LEVEL_INPUT_MHS.BUILD_STRATEGY_INVENTORY_BUILD_DAYS,
SERVICE_LEVEL_INPUT_MHS.ITEMS_WITH_MONTHLY_FORECAST_EXCLUDED,
SERVICE_LEVEL_INPUT_MHS.GO_LIVE_REF,
SERVICE_LEVEL_INPUT_MHS.OH_MCNS_COVERAGE_TARGET90,
SERVICE_LEVEL_INPUT_MHS.OH_OO_MUS_COVERAGE_TARGET96
FROM    SERVICE_LEVEL_INPUT_MHS_SA AS SERVICE_LEVEL_INPUT_MHS
LEFT JOIN START_DATE_MHS
ON      SERVICE_LEVEL_INPUT_MHS.CUSTOMER_NAME = START_DATE_MHS.CUSTOMER_NAME;



-----------------------------------------------------------------------------------ITEM TABLE
create or replace TABLE SBX_PSAS_DB.SALES_OPS_GOV.T_SERVICE_LEVEL_ONBOARDING_DASHBOARD_ITEM (
	CAL_CYMD DATE,
	DAYS_FROM_START NUMBER(10,0),
	LAST_DAY DATE,
	CUST_ACCT_ID VARCHAR(6),
	CUST_ACCT_NAM VARCHAR(99),
	CUSTOMER_NAME VARCHAR(99),
	START_DT DATE,
	START_DATE_NOTED VARCHAR(99),
	HOME_DC_ID VARCHAR(4),
	PRI_FILL_DC_ID VARCHAR(4),
	FILL_EM_ITEM_NUM VARCHAR(7),
	FILL_NDC_NUM VARCHAR(11),
	FILL_SPLR_NAM VARCHAR(25),
	FILL_GNRC_IND VARCHAR(1),
	GNRC_TYP_CD VARCHAR(1),
	FILL_SELL_DSCR VARCHAR(30),
	FILL_SVC_LVL_CTGY_CD VARCHAR(1),
	FILL_RXDA_CD VARCHAR(1),
	FILL_GNRC_ITEM_CD VARCHAR(1),
	FILL_ITEM_ACTVY_CD VARCHAR(1),
	FILL_MCNS_RESOLUTION VARCHAR(50),
	FILL_MCNS_SPECIFICS VARCHAR(255),
	FILL_MCNS_MORE_INFO VARCHAR(255),
	FILL_MCNS_BEG_DT VARCHAR(10),
	FILL_MCNS_END_DT VARCHAR(10),
	ORDR_EM_ITEM_NUM VARCHAR(7),
	ORDR_SELL_DSCR VARCHAR(30),
	ORDR_NDC_NUM VARCHAR(11),
	ORDR_MCNS_RESOLUTION VARCHAR(50),
	ORDR_MCNS_SPECIFICS VARCHAR(255),
	ORDR_MCNS_MORE_INFO VARCHAR(255),
	ORDR_MCNS_BEG_DT VARCHAR(10),
	ORDR_MCNS_END_DT VARCHAR(10),
	ORDR_QTY NUMBER(22,0),
	FILL_QTY NUMBER(22,0),
	OMIT_QTY NUMBER(22,0),
	MCS_OMIT_QTY NUMBER(22,0),
	CSMP_OMIT_QTY NUMBER(22,0),
	INVC_AMT NUMBER(23,2)
);

--------------------------------------------------------------------------------------------------ITEM TASK
create or replace task SBX_PSAS_DB.SALES_OPS_GOV.TSK_KEVIN_B_SERVICE_LEVEL_ANALYTICS_ONBOARDING_DASHBOARD_DETAIL
	warehouse=SBX_EA_GENERAL_FR_WH
	schedule='USING CRON 57 7 * * 1-5 America/Chicago'
	TIMESTAMP_INPUT_FORMAT='AUTO'
	as CREATE OR REPLACE TABLE SBX_PSAS_DB.SALES_OPS_GOV.T_SERVICE_LEVEL_ONBOARDING_DASHBOARD_ITEM AS

    
--CUSTOMER DATA FOR MHS
WITH 
-- CREATE OR REPLACE TEMPORARY TABLE
ONBOARD AS (


SELECT * FROM SBX_PSAS_DB.SALES_OPS_GOV.SERVICE_LEVEL_INPUT_CPH
WHERE CUST_ACCT_ID <> '401366'

)

--FIND FIRST ORDER DATE OF AN ACCOUNT
, 

-- CREATE OR REPLACE TEMPORARY TABLE
START_DATE AS (

SELECT  CUST.CUST_ACCT_ID,
        MIN(CAL_CYMD) AS START_DT
FROM    PRD_PSAS_DB.RPT.T_SLA_CUST_ORD_DTL ORD
JOIN    PRD_PSAS_DB.RPT.T_SLA_CUST_ACCT CUST
ON      ORD.CUST_ACCT_SURR_KEY = CUST.CUST_ACCT_SURR_KEY
JOIN    ONBOARD
ON      LTRIM(CUST.CUST_ACCT_ID,'0') = LTRIM(ONBOARD.CUST_ACCT_ID,'0')
WHERE   ORD.ORDR_QTY > 0
AND     CAL_CYMD >= '2022-09-01' 
AND     CAL_CYMD BETWEEN DATEADD(DAY, -60, ONBOARD.START_DATE_NOTED) AND DATEADD(DAY, 120, ONBOARD.START_DATE_NOTED)
GROUP BY  CUST.CUST_ACCT_ID)


, 
-- CREATE OR REPLACE TEMPORARY TABLE
CPH AS (

SELECT  ORD.CAL_CYMD,
        --DATEDIFF(day, START_DATE.START_DT::DATE, ORD.CAL_CYMD::DATE) DAYS_FROM_START,
        DATEDIFF(day, START_DATE.START_DT::DATE, ORD.CAL_CYMD::DATE)+1 AS DAYS_FROM_START,
        LAST_DAY(ORD.CAL_CYMD, 'week') LAST_DAY,
        CUST.CUST_ACCT_ID,
        CUST.CUST_ACCT_NAM,
        ONBOARD.CUSTOMER_NAME,
        CASE WHEN START_DATE.START_DT IS NULL THEN START_DATE_NOTED ELSE START_DATE.START_DT END START_DT,
        START_DATE_NOTED,
        CUST_ACCT.HOME_DC_ID,
        CUST_ACCT.PRI_FILL_DC_ID,
        FILL_ITEM.EM_ITEM_NUM AS FILL_EM_ITEM_NUM,
        FILL_ITEM.NDC_NUM AS FILL_NDC_NUM,
        FILL_ITEM.SPLR_ACCT_NAM AS FILL_SPLR_NAM,
        FILL_ITEM.GNRC_IND AS FILL_GNRC_IND,
        FILL_ITEM.GNRC_TYP_CD AS GNRC_TYP_CD,
        FILL_ITEM.SELL_DSCR AS FILL_SELL_DSCR,
        FILL_ITEM.SVC_LVL_CTGY_CD AS FILL_SVC_LVL_CTGY_CD,
        FILL_ITEM.RXDA_CD AS FILL_RXDA_CD,
        FILL_ITEM.GNRC_ITEM_CD AS FILL_GNRC_ITEM_CD,
        FILL_ITEM.ITEM_ACTVY_CD AS FILL_ITEM_ACTVY_CD,
        FILL_MCNS.RESOLUTION AS FILL_MCNS_RESOLUTION,
        FILL_MCNS.SPECIFICS AS FILL_MCNS_SPECIFICS,
        FILL_MCNS.MORE_INFO AS FILL_MCNS_MORE_INFO,
        FILL_MCNS.BEG_EFF_CCYYMMDD_DT AS FILL_MCNS_BEG_DT,
        FILL_MCNS.END_EFF_CCYYMMDD_DT AS FILL_MCNS_END_DT,
        ORDR_ITEM.EM_ITEM_NUM AS ORDR_EM_ITEM_NUM,
        ORDR_ITEM.SELL_DSCR AS ORDR_SELL_DSCR,
        ORDR_ITEM.NDC_NUM AS ORDR_NDC_NUM,
        ORDR_MCNS.RESOLUTION AS ORDR_MCNS_RESOLUTION,
        ORDR_MCNS.SPECIFICS AS ORDR_MCNS_SPECIFICS,
        ORDR_MCNS.MORE_INFO AS ORDR_MCNS_MORE_INFO,
        ORDR_MCNS.BEG_EFF_CCYYMMDD_DT AS ORDR_MCNS_BEG_DT,
        ORDR_MCNS.END_EFF_CCYYMMDD_DT AS ORDR_MCNS_END_DT,
        SUM(ORD.ORDR_QTY) ORDR_QTY,
        SUM(ORD.FILL_QTY) FILL_QTY,
        SUM(ORD.OMIT_QTY) OMIT_QTY,
        SUM(ORD.MUS_QTY) MCS_OMIT_QTY,
        SUM(ORD.CNTRL_OMIT_QTY) CSMP_OMIT_QTY,
        SUM(SLS_EXT_AMT) INVC_AMT
        -- SUM(ORD.FILL_QTY) / NULLIF(SUM(ORD.ORDR_QTY),0) RAW_PIECE_SL,
        -- NULLIF(SUM(ORD.FILL_QTY),0) / (SUM(ORD.ORDR_QTY) - SUM(ORD.MUS_QTY)) ADJ_PIECE_SL, 
FROM    PRD_PSAS_DB.RPT.T_SLA_CUST_ORD_DTL ORD
JOIN    PRD_PSAS_DB.RPT.T_SLA_CUST_ACCT CUST
ON      ORD.CUST_ACCT_SURR_KEY = CUST.CUST_ACCT_SURR_KEY
JOIN    PRD_PSAS_DB.RPT.DIM_CUST_ACCT_CURR CUST_ACCT
ON      CUST.CUST_ACCT_ID = CUST_ACCT.CUST_ACCT_ID
JOIN    ONBOARD
ON      LTRIM(CUST_ACCT.CUST_ACCT_ID,'0') = LTRIM(ONBOARD.CUST_ACCT_ID,'0')
JOIN    PRD_PSAS_DB.RPT.T_SLA_EM_ITEM FILL_ITEM
ON      FILL_ITEM.ITEM_SURR_KEY = ORD.FILL_ITEM_SURR_KEY
JOIN    PRD_PSAS_DB.RPT.T_SLA_EM_ITEM ORDR_ITEM
ON      ORDR_ITEM.ITEM_SURR_KEY = ORD.ORIG_ITEM_SURR_KEY
JOIN    START_DATE
ON      START_DATE.CUST_ACCT_ID = CUST.CUST_ACCT_ID
AND     CAL_CYMD >= START_DATE.START_DT
AND     CAL_CYMD <= DATEADD(day,90,START_DATE.START_DT)
LEFT JOIN PRD_PSAS_DB.RPT.T_ITEM_MCNS FILL_MCNS
ON      FILL_MCNS.EM_ITEM_NUM = FILL_ITEM.EM_ITEM_NUM
AND     FILL_MCNS.CURR_IND = 'Y'
LEFT JOIN PRD_PSAS_DB.RPT.T_ITEM_MCNS ORDR_MCNS
ON      ORDR_MCNS.EM_ITEM_NUM = ORDR_ITEM.EM_ITEM_NUM
AND     ORDR_MCNS.CURR_IND = 'Y'
GROUP BY ORD.CAL_CYMD,
        DATEDIFF(day, START_DATE.START_DT::DATE, ORD.CAL_CYMD::DATE) +1,
        LAST_DAY(ORD.CAL_CYMD, 'week'),
        CUST.CUST_ACCT_ID,
        CUST.CUST_ACCT_NAM,
        ONBOARD.CUSTOMER_NAME,
        CASE WHEN START_DATE.START_DT IS NULL THEN START_DATE_NOTED ELSE START_DATE.START_DT END,
        START_DATE_NOTED,
        CUST_ACCT.HOME_DC_ID,
        CUST_ACCT.PRI_FILL_DC_ID,
        FILL_ITEM.EM_ITEM_NUM,
        FILL_ITEM.NDC_NUM,
        FILL_ITEM.SPLR_ACCT_NAM,
        FILL_ITEM.GNRC_IND,
        FILL_ITEM.GNRC_TYP_CD,
        FILL_ITEM.SELL_DSCR,
        FILL_ITEM.SVC_LVL_CTGY_CD,
        FILL_ITEM.RXDA_CD,
        FILL_ITEM.GNRC_ITEM_CD,
        FILL_ITEM.ITEM_ACTVY_CD,
        FILL_MCNS.RESOLUTION,
        FILL_MCNS.SPECIFICS,
        FILL_MCNS.MORE_INFO,
        FILL_MCNS.BEG_EFF_CCYYMMDD_DT,
        FILL_MCNS.END_EFF_CCYYMMDD_DT,
        ORDR_ITEM.EM_ITEM_NUM,
        ORDR_ITEM.SELL_DSCR,
        ORDR_ITEM.NDC_NUM,
        ORDR_MCNS.RESOLUTION,
        ORDR_MCNS.SPECIFICS,
        ORDR_MCNS.MORE_INFO,
        ORDR_MCNS.BEG_EFF_CCYYMMDD_DT,
        ORDR_MCNS.END_EFF_CCYYMMDD_DT)
        
------------------------------------------------

,
-- CREATE OR REPLACE TEMPORARY TABLE
SERVICE_LEVEL_INPUT_MHS_SA AS (

SELECT * FROM SBX_PSAS_DB.SALES_OPS_GOV.SERVICE_LEVEL_INPUT_MHS WHERE CUSTOMER_NAME NOT LIKE 'OPTUM - %'
UNION ALL
SELECT * FROM SBX_PSAS_DB.SALES_OPS_GOV.SERVICE_LEVEL_INPUT_SA)


--MHS CODING LOGIC
, 
-- CREATE OR REPLACE TEMPORARY TABLE
ACCT AS (
SELECT  CUSTOMER_NAME, VALUE AS CUST_ACCT_ID,
FROM    SERVICE_LEVEL_INPUT_MHS_SA, LATERAL SPLIT_TO_TABLE(SERVICE_LEVEL_CODING_ACCOUNT_ID, ';')
WHERE   SERVICE_LEVEL_CODING_ACCOUNT_ID IS NOT NULL)

,  
-- CREATE OR REPLACE TEMPORARY TABLE
REGION_ID AS (
SELECT  CUSTOMER_NAME, VALUE AS REGION_ID 
FROM    SERVICE_LEVEL_INPUT_MHS_SA, LATERAL SPLIT_TO_TABLE(SERVICE_LEVEL_CODING_REGION_ID, ';')
WHERE   SERVICE_LEVEL_CODING_REGION_ID IS NOT NULL
AND SERVICE_LEVEL_CODING_ACCOUNT_ID IS NULL)

, 
-- CREATE OR REPLACE TEMPORARY TABLE
NATL_SUB_GROUP_ID AS (
SELECT  CUSTOMER_NAME, VALUE AS NATL_SUB_GROUP_ID
FROM    SERVICE_LEVEL_INPUT_MHS_SA, LATERAL SPLIT_TO_TABLE(SERVICE_LEVEL_CODING_NATIONAL_SUB_GROUP_ID, ';')
WHERE   SERVICE_LEVEL_CODING_NATIONAL_SUB_GROUP_ID IS NOT NULL
AND SERVICE_LEVEL_CODING_ACCOUNT_ID IS NULL)

,  
-- CREATE OR REPLACE TEMPORARY TABLE
NATL_GROUP_ID AS (
SELECT  CUSTOMER_NAME, VALUE AS NATL_GROUP_ID
FROM    SERVICE_LEVEL_INPUT_MHS_SA, LATERAL SPLIT_TO_TABLE(SERVICE_LEVEL_CODING_NATIONAL_GROUP_ID, ';')
WHERE   SERVICE_LEVEL_CODING_NATIONAL_GROUP_ID IS NOT NULL
AND SERVICE_LEVEL_CODING_ACCOUNT_ID IS NULL)

,  
-- CREATE OR REPLACE TEMPORARY TABLE
CHAIN_ID AS (
SELECT  CUSTOMER_NAME, VALUE AS CHAIN_ID
FROM    SERVICE_LEVEL_INPUT_MHS_SA, LATERAL SPLIT_TO_TABLE(SERVICE_LEVEL_CODING_CHAIN_ID, ';')
WHERE   SERVICE_LEVEL_CODING_CHAIN_ID IS NOT NULL
AND SERVICE_LEVEL_CODING_ACCOUNT_ID IS NULL)

,  
-- CREATE OR REPLACE TEMPORARY TABLE
MAPPING AS (

SELECT 
A.CUSTOMER_NAME,
A.CHAIN_ID,
B.NATL_GROUP_ID,
C.NATL_SUB_GROUP_ID,
D.REGION_ID
FROM CHAIN_ID A
LEFT JOIN NATL_GROUP_ID B
ON A.CUSTOMER_NAME=B.CUSTOMER_NAME
LEFT JOIN NATL_SUB_GROUP_ID C
ON A.CUSTOMER_NAME=C.CUSTOMER_NAME
LEFT JOIN REGION_ID D
ON A.CUSTOMER_NAME=D.CUSTOMER_NAME)

, 
-- CREATE OR REPLACE TEMPORARY TABLE
ACCT_NO_REGION AS ( 
SELECT MAPPING.*,
ACCT.CUST_ACCT_ID
FROM MAPPING MAPPING
LEFT JOIN PRD_PSAS_DB.EDWRPT.DIM_CUST_ACCT_CURR ACCT
ON LTRIM(MAPPING.CHAIN_ID,'0')=LTRIM(ACCT.ACCT_CHN_ID,'0')
AND LTRIM(MAPPING.NATL_GROUP_ID,'0')=LTRIM(ACCT.NATL_GRP_CD,'0')
AND LTRIM(MAPPING.NATL_SUB_GROUP_ID,'0')=LTRIM(ACCT.NATL_SUB_GRP_CD,'0')
WHERE MAPPING.REGION_ID IS NULL)

,  
-- CREATE OR REPLACE TEMPORARY TABLE
ACCT_YES_REGION AS ( 
SELECT MAPPING.*,
ACCT.CUST_ACCT_ID
FROM MAPPING MAPPING
LEFT JOIN PRD_PSAS_DB.EDWRPT.DIM_CUST_ACCT_CURR ACCT
ON LTRIM(MAPPING.CHAIN_ID,'0')=LTRIM(ACCT.ACCT_CHN_ID,'0')
AND LTRIM(MAPPING.NATL_GROUP_ID,'0')=LTRIM(ACCT.NATL_GRP_CD,'0')
AND LTRIM(MAPPING.NATL_SUB_GROUP_ID,'0')=LTRIM(ACCT.NATL_SUB_GRP_CD,'0')
AND LTRIM(MAPPING.REGION_ID,'0')=LTRIM(ACCT.CUST_RGN_NUM,'0')
WHERE REGION_ID IS NOT NULL)

, 
-- CREATE OR REPLACE TEMPORARY TABLE
ONBOARD_MHS AS (
SELECT DISTINCT CUSTOMER_NAME,CUST_ACCT_ID
FROM ACCT
WHERE CUST_ACCT_ID <> ''
GROUP BY 1,2
UNION 
SELECT DISTINCT CUSTOMER_NAME,CUST_ACCT_ID 
FROM ACCT_NO_REGION
WHERE CUST_ACCT_ID <> ''
GROUP BY 1,2
UNION 
SELECT DISTINCT CUSTOMER_NAME,CUST_ACCT_ID 
FROM ACCT_YES_REGION
WHERE CUST_ACCT_ID <> ''
GROUP BY 1,2)

--FIND FIRST ORDER DATE OF AN ACCOUNT
, 
-- CREATE OR REPLACE TEMPORARY TABLE
START_DATE_MHS_PREP AS (

SELECT  ONBOARD_MHS.CUSTOMER_NAME,
        MIN(CAL_CYMD) AS START_DT
FROM    PRD_PSAS_DB.RPT.T_SLA_CUST_ORD_DTL ORD
JOIN    PRD_PSAS_DB.RPT.T_SLA_CUST_ACCT CUST
ON      ORD.CUST_ACCT_SURR_KEY = CUST.CUST_ACCT_SURR_KEY
JOIN    ONBOARD_MHS
ON      LTRIM(CUST.CUST_ACCT_ID,'0') = LTRIM(ONBOARD_MHS.CUST_ACCT_ID,'0')
WHERE   ORD.ORDR_QTY > 0
AND     CAL_CYMD >= '2022-09-01'
GROUP BY  ONBOARD_MHS.CUSTOMER_NAME)


, 
-- CREATE OR REPLACE TEMPORARY TABLE
START_DATE_MHS AS (

SELECT  START_DATE_MHS_PREP.CUSTOMER_NAME,
        CASE WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'UNIVERSITY OF UTAH' THEN '2023-11-01'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'WEST VIRGINIA UNIVERSITY' THEN '2023-11-01'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'HARTFORD HEALTHCARE' THEN '2023-11-01'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'ORTHO MIDWEST SURGERY CENTER,165957' THEN '2023-07-01'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'BERKSHIRE HEALTH SYSTEM (NARH)' THEN '2024-02-23'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'UPMC HOSPITALS' THEN '2023-08-16'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'OZARK' THEN '2022-01-03'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'MERCY' THEN '2024-01-03'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'OPTUM SP' THEN '2024-07-01'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'OPTUM HDP' THEN '2024-07-01'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'OPTUM FRONTIER' THEN '2024-07-01'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'OPTUM GENOA' THEN '2024-07-01'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'METRO' THEN '2024-04-15'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'COLUMBIA VALLEY COMMUNITY HEALTH' THEN '2024-04-01'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'ANDERSON HEALTH CARE' THEN '2024-08-05'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'HCA HEATHCARE' THEN '2023-03-01'
             ELSE START_DATE_MHS_PREP.START_DT END AS START_DT
FROM    START_DATE_MHS_PREP
GROUP BY START_DATE_MHS_PREP.CUSTOMER_NAME, 
        CASE WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'UNIVERSITY OF UTAH' THEN '2023-11-01'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'WEST VIRGINIA UNIVERSITY' THEN '2023-11-01'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'HARTFORD HEALTHCARE' THEN '2023-11-01'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'ORTHO MIDWEST SURGERY CENTER,165957' THEN '2023-07-01'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'BERKSHIRE HEALTH SYSTEM (NARH)' THEN '2024-02-23'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'UPMC HOSPITALS' THEN '2023-08-16'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'OZARK' THEN '2022-01-03'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'MERCY' THEN '2024-01-03'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'OPTUM SP' THEN '2024-07-01'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'OPTUM HDP' THEN '2024-07-01'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'OPTUM FRONTIER' THEN '2024-07-01'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'OPTUM GENOA' THEN '2024-07-01'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'METRO' THEN '2024-04-15'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'COLUMBIA VALLEY COMMUNITY HEALTH' THEN '2024-04-01'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'ANDERSON HEALTH CARE' THEN '2024-08-05'
             WHEN START_DATE_MHS_PREP.CUSTOMER_NAME = 'HCA HEATHCARE' THEN '2023-03-01'
             ELSE START_DATE_MHS_PREP.START_DT END)

SELECT * FROM CPH 

UNION ALL 


SELECT  ORD.CAL_CYMD,
        --DATEDIFF(day, START_DATE_MHS.START_DT::DATE, ORD.CAL_CYMD::DATE) DAYS_FROM_START,
        DATEDIFF(day, START_DATE_MHS.START_DT::DATE, ORD.CAL_CYMD::DATE)+1 AS DAYS_FROM_START,
        LAST_DAY(ORD.CAL_CYMD, 'week') LAST_DAY,
        '999999' AS CUST_ACCT_ID,
        ONBOARD_MHS.CUSTOMER_NAME AS CUST_ACCT_NAM,
        ONBOARD_MHS.CUSTOMER_NAME,
        CASE WHEN START_DATE_MHS.START_DT IS NULL THEN START_DATE_NOTED ELSE START_DATE_MHS.START_DT END START_DT,
        START_DATE_NOTED,
        NULL AS HOME_DC_ID,
        NULL AS PRI_FILL_DC_ID,
        FILL_ITEM.EM_ITEM_NUM AS FILL_EM_ITEM_NUM,
        FILL_ITEM.NDC_NUM AS FILL_NDC_NUM,
        FILL_ITEM.SPLR_ACCT_NAM AS FILL_SPLR_NAM,
        FILL_ITEM.GNRC_IND AS FILL_GNRC_IND,
        FILL_ITEM.GNRC_TYP_CD AS GNRC_TYP_CD,
        FILL_ITEM.SELL_DSCR AS FILL_SELL_DSCR,
        FILL_ITEM.SVC_LVL_CTGY_CD AS FILL_SVC_LVL_CTGY_CD,
        FILL_ITEM.RXDA_CD AS FILL_RXDA_CD,
        FILL_ITEM.GNRC_ITEM_CD AS FILL_GNRC_ITEM_CD,
        FILL_ITEM.ITEM_ACTVY_CD AS FILL_ITEM_ACTVY_CD,
        FILL_MCNS.RESOLUTION AS FILL_MCNS_RESOLUTION,
        FILL_MCNS.SPECIFICS AS FILL_MCNS_SPECIFICS,
        FILL_MCNS.MORE_INFO AS FILL_MCNS_MORE_INFO,
        FILL_MCNS.BEG_EFF_CCYYMMDD_DT AS FILL_MCNS_BEG_DT,
        FILL_MCNS.END_EFF_CCYYMMDD_DT AS FILL_MCNS_END_DT,
        ORDR_ITEM.EM_ITEM_NUM AS ORDR_EM_ITEM_NUM,
        ORDR_ITEM.SELL_DSCR AS ORDR_SELL_DSCR,
        ORDR_ITEM.NDC_NUM AS ORDR_NDC_NUM,
        ORDR_MCNS.RESOLUTION AS ORDR_MCNS_RESOLUTION,
        ORDR_MCNS.SPECIFICS AS ORDR_MCNS_SPECIFICS,
        ORDR_MCNS.MORE_INFO AS ORDR_MCNS_MORE_INFO,
        ORDR_MCNS.BEG_EFF_CCYYMMDD_DT AS ORDR_MCNS_BEG_DT,
        ORDR_MCNS.END_EFF_CCYYMMDD_DT AS ORDR_MCNS_END_DT,
        SUM(ORD.ORDR_QTY) ORDR_QTY,
        SUM(ORD.FILL_QTY) FILL_QTY,
        SUM(ORD.OMIT_QTY) OMIT_QTY,
        SUM(ORD.MUS_QTY) MCS_OMIT_QTY,
        SUM(ORD.CNTRL_OMIT_QTY) CSMP_OMIT_QTY,
        SUM(SLS_EXT_AMT) INVC_AMT
        -- SUM(ORD.FILL_QTY) / NULLIF(SUM(ORD.ORDR_QTY),0) RAW_PIECE_SL,
        -- NULLIF(SUM(ORD.FILL_QTY),0) / (SUM(ORD.ORDR_QTY) - SUM(ORD.MUS_QTY)) ADJ_PIECE_SL, 
FROM    PRD_PSAS_DB.RPT.T_SLA_CUST_ORD_DTL ORD
JOIN    PRD_PSAS_DB.RPT.T_SLA_CUST_ACCT CUST
ON      ORD.CUST_ACCT_SURR_KEY = CUST.CUST_ACCT_SURR_KEY
JOIN    PRD_PSAS_DB.RPT.DIM_CUST_ACCT_CURR CUST_ACCT
ON      CUST.CUST_ACCT_ID = CUST_ACCT.CUST_ACCT_ID
JOIN    ONBOARD_MHS
ON      LTRIM(CUST_ACCT.CUST_ACCT_ID,'0') = LTRIM(ONBOARD_MHS.CUST_ACCT_ID,'0')
JOIN    PRD_PSAS_DB.RPT.T_SLA_EM_ITEM FILL_ITEM
ON      FILL_ITEM.ITEM_SURR_KEY = ORD.FILL_ITEM_SURR_KEY
JOIN    PRD_PSAS_DB.RPT.T_SLA_EM_ITEM ORDR_ITEM
ON      ORDR_ITEM.ITEM_SURR_KEY = ORD.ORIG_ITEM_SURR_KEY
JOIN    START_DATE_MHS
ON      START_DATE_MHS.CUSTOMER_NAME = ONBOARD_MHS.CUSTOMER_NAME
AND     CAL_CYMD >= START_DATE_MHS.START_DT
AND     CAL_CYMD <= DATEADD(day,90,START_DATE_MHS.START_DT)
LEFT JOIN PRD_PSAS_DB.RPT.T_ITEM_MCNS FILL_MCNS
ON      FILL_MCNS.EM_ITEM_NUM = FILL_ITEM.EM_ITEM_NUM
AND     FILL_MCNS.CURR_IND = 'Y'
LEFT JOIN PRD_PSAS_DB.RPT.T_ITEM_MCNS ORDR_MCNS
ON      ORDR_MCNS.EM_ITEM_NUM = ORDR_ITEM.EM_ITEM_NUM
AND     ORDR_MCNS.CURR_IND = 'Y'
LEFT JOIN SERVICE_LEVEL_INPUT_MHS_SA AS SERVICE_LEVEL_INPUT_MHS
ON      ONBOARD_MHS.CUSTOMER_NAME = SERVICE_LEVEL_INPUT_MHS.CUSTOMER_NAME
GROUP BY ORD.CAL_CYMD,
        DATEDIFF(day, START_DATE_MHS.START_DT::DATE, ORD.CAL_CYMD::DATE) +1,
        LAST_DAY(ORD.CAL_CYMD, 'week'),
        ONBOARD_MHS.CUSTOMER_NAME,
        ONBOARD_MHS.CUSTOMER_NAME,
        CASE WHEN START_DATE_MHS.START_DT IS NULL THEN START_DATE_NOTED ELSE START_DATE_MHS.START_DT END,
        START_DATE_NOTED,
        FILL_ITEM.EM_ITEM_NUM,
        FILL_ITEM.NDC_NUM,
        FILL_ITEM.SPLR_ACCT_NAM,
        FILL_ITEM.GNRC_IND,
        FILL_ITEM.GNRC_TYP_CD,
        FILL_ITEM.SELL_DSCR,
        FILL_ITEM.SVC_LVL_CTGY_CD,
        FILL_ITEM.RXDA_CD,
        FILL_ITEM.GNRC_ITEM_CD,
        FILL_ITEM.ITEM_ACTVY_CD,
        FILL_MCNS.RESOLUTION,
        FILL_MCNS.SPECIFICS,
        FILL_MCNS.MORE_INFO,
        FILL_MCNS.BEG_EFF_CCYYMMDD_DT,
        FILL_MCNS.END_EFF_CCYYMMDD_DT,
        ORDR_ITEM.EM_ITEM_NUM,
        ORDR_ITEM.SELL_DSCR,
        ORDR_ITEM.NDC_NUM,
        ORDR_MCNS.RESOLUTION,
        ORDR_MCNS.SPECIFICS,
        ORDR_MCNS.MORE_INFO,
        ORDR_MCNS.BEG_EFF_CCYYMMDD_DT,
        ORDR_MCNS.END_EFF_CCYYMMDD_DT;