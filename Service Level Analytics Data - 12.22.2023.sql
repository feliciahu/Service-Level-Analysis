
--REPLICATE TREND TAB OF SL REPORT
ALTER SESSION SET WEEK_START = 6;

SELECT  --ORD.CAL_CYMD,
        LAST_DAY(ORD.CAL_CYMD, 'week'),
        CUST.CUST_ACCT_ID,
        CUST.CUST_ACCT_NAM,
        CUST_ACCT.HOME_DC_ID,
        CUST_ACCT.PRI_FILL_DC_ID,
        SUM(ORD.ORDR_QTY) ORDR_QTY,
        SUM(ORD.FILL_QTY) FILL_QTY,
        SUM(ORD.OMIT_QTY) OMIT_QTY,
        SUM(ORD.MUS_QTY) MCS__OMIT_QTY,
        SUM(ORD.CNTRL_OMIT_QTY) CSMP_OMIT_QTY,
        SUM(ORD.FILL_QTY) / SUM(ORD.ORDR_QTY) RAW_PIECE_SL,
        (SUM(ORD.ORDR_QTY) - SUM(ORD.MUS_QTY)) / SUM(ORD.FILL_QTY) ADJ_PIECE_SL, 
        SUM(SLS_EXT_AMT) INVC_AMT
FROM    PRD_PSAS_DB.RPT.T_SLA_CUST_ORD_DTL ORD
JOIN    PRD_PSAS_DB.RPT.T_SLA_CUST_ACCT CUST
ON      ORD.CUST_ACCT_SURR_KEY = CUST.CUST_ACCT_SURR_KEY
JOIN    PRD_PSAS_DB.RPT.DIM_CUST_ACCT_CURR CUST_ACCT
ON      CUST.CUST_ACCT_ID = CUST_ACCT.CUST_ACCT_ID
WHERE   CUST.CUST_ACCT_ID = '310133'
AND     CAL_CYMD >= '2023-11-01'
AND     CAL_CYMD <= '2023-12-15'
GROUP BY --ORD.CAL_CYMD,
        LAST_DAY(ORD.CAL_CYMD, 'week'),
        CUST.CUST_ACCT_ID,
        CUST.CUST_ACCT_NAM,
        CUST_ACCT.HOME_DC_ID,
        CUST_ACCT.PRI_FILL_DC_ID
ORDER BY 1 ASC


--FIND FIRST ORDER DATE OF AN ACCOUNT
CREATE OR REPLACE TEMPORARY TABLE START_DATE AS 

SELECT  CUST.CUST_ACCT_ID,
        MIN(CAL_CYMD) AS START_DT
FROM    PRD_PSAS_DB.RPT.T_SLA_CUST_ORD_DTL ORD
JOIN    PRD_PSAS_DB.RPT.T_SLA_CUST_ACCT CUST
ON      ORD.CUST_ACCT_SURR_KEY = CUST.CUST_ACCT_SURR_KEY
WHERE   CUST.CUST_ACCT_ID = '190191'
GROUP BY  CUST.CUST_ACCT_ID;

--BREAK OUT BY DAY AND ADD DAYS FROM START
ALTER SESSION SET WEEK_START = 6;

SELECT  ORD.CAL_CYMD,
        DATEDIFF(day, START_DATE.START_DT::DATE, ORD.CAL_CYMD::DATE) DAYS_FROM_START,
        LAST_DAY(ORD.CAL_CYMD, 'week'),
        CUST.CUST_ACCT_ID,
        CUST.CUST_ACCT_NAM,
        CUST_ACCT.HOME_DC_ID,
        CUST_ACCT.PRI_FILL_DC_ID,
        SUM(ORD.ORDR_QTY) ORDR_QTY,
        SUM(ORD.FILL_QTY) FILL_QTY,
        SUM(ORD.OMIT_QTY) OMIT_QTY,
        SUM(ORD.MUS_QTY) MCS__OMIT_QTY,
        SUM(ORD.CNTRL_OMIT_QTY) CSMP_OMIT_QTY,
        SUM(ORD.FILL_QTY) / NULLIF(SUM(ORD.ORDR_QTY),0) RAW_PIECE_SL,
        (SUM(ORD.ORDR_QTY) - SUM(ORD.MUS_QTY)) / NULLIF(SUM(ORD.FILL_QTY),0) ADJ_PIECE_SL, 
        SUM(SLS_EXT_AMT) INVC_AMT
FROM    PRD_PSAS_DB.RPT.T_SLA_CUST_ORD_DTL ORD
JOIN    PRD_PSAS_DB.RPT.T_SLA_CUST_ACCT CUST
ON      ORD.CUST_ACCT_SURR_KEY = CUST.CUST_ACCT_SURR_KEY
JOIN    PRD_PSAS_DB.RPT.DIM_CUST_ACCT_CURR CUST_ACCT
ON      CUST.CUST_ACCT_ID = CUST_ACCT.CUST_ACCT_ID
JOIN    START_DATE
ON      START_DATE.CUST_ACCT_ID = CUST.CUST_ACCT_ID
AND     CAL_CYMD >= START_DATE.START_DT
AND     CAL_CYMD <= DATEADD(day,90,START_DATE.START_DT)
GROUP BY ORD.CAL_CYMD,
        DATEDIFF(day, START_DATE.START_DT::DATE, ORD.CAL_CYMD::DATE),
        LAST_DAY(ORD.CAL_CYMD, 'week'),
        CUST.CUST_ACCT_ID,
        CUST.CUST_ACCT_NAM,
        CUST_ACCT.HOME_DC_ID,
        CUST_ACCT.PRI_FILL_DC_ID
ORDER BY 1 ASC

--LETS LAYER IN THE BELOW ITEM INFORMATION INTO THE DAILY LEVEL SCRIPT LATER ON SO THAT WE HAVE DETAILS ON WHICH PRODUCTS OMIT, ETC.

  ITEM_ORIG.EM_ITEM_NUM,
  ITEM_ORIG.NDC_NUM,
  ITEM_FILL.SPLR_ACCT_NAM,
  ITEM_FILL.GNRC_IND,
  ITEM_FILL.GNRC_TYP_CD,
  ITEM_FILL.EM_ITEM_NUM,
  ITEM_FILL.SELL_DSCR,
  ITEM_FILL.SVC_LVL_CTGY_CD,
  ITEM_FILL.RXDA_CD,
  ITEM_FILL.NDC_NUM,
  ITEM_FILL.GNRC_ITEM_CD,
  ITEM_FILL.ITEM_ACTVY_CD,
  BUSOBJ.S_SLA_CUST_ORD_DTL.OMIT_CD,

  SELECT TOP 10 * FROM PRD_PSAS_DB.RPT.T_SLA_EM_ITEM
  ORIG_ITEM_SURR_KEY
  FILL_ITEM_SURR_KEY

  ITEM_SURR_KEY
  
SELECT TOP 10 * FROM PRD_PSAS_DB.RPT.T_SLA_CUST_ORD_DTL

--QUERY 2:

SELECT   TOP 10 
         EM_ITEM_NUM
        ,RESOLUTION
        ,SPECIFICS
FROM    PRD_PSAS_DB.RPT.T_ITEM_MCNS
WHERE   CURR_IND = 'Y'

SELECT
  Table__1.EM_ITEM_NUM,
  Table__1.RESOLUTION,
  Table__1.SPECIFICS
FROM
  "BUSOBJ"."S_ITEM_MCNS"  Table__1
WHERE
( Table__1.CURR_IND = 'Y'  )
Tables Involved in Query 2: 
1.	"BUSOBJ"."S_ITEM_MCNS"



--FIND DATA SOURCES IN SNOWFLAKE
SELECT tbl.table_schema as schema_name
, tbl.table_name as name--view_name
, col.column_name
, col.data_type
, CASE WHEN col.character_maximum_length is not null
THEN col.character_maximum_length
ELSE col.numeric_precision end as max_length,
COALESCE(col.numeric_scale, null) as num_precision, is_nullable
,table_type
FROM information_schema.tables tbl
LEFT JOIN information_schema.columns col
ON tbl.table_schema = col.table_schema
AND tbl.table_name = col.table_name
WHERE 1=1
AND table_type = 'VIEW' 
AND tbl.table_schema != 'INFORMATION_SCHEMA'
AND (col.column_name ILIKE '%ORD_REASON%'
OR col.column_name ILIKE '%RSN_DSCR%'
OR col.column_name ILIKE '%RSN%'
OR col.column_name ILIKE '%ORDER%'
OR col.column_name ILIKE '%ORDR_RSN_CD%')
ORDER BY schema_name, NAME, COLUMN_NAME;